@model List<SistemaGestion.Models.ViewModels.IdocNCFCView>
<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="ReprocesoIdocNCFC"> <i class="fa fa-retweet"></i> NCFC</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <div class="row">
                <div class="col-lg-12">
                    <table id="TBNCFC" class="table table-bordered  display nowrap" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th style="width:30px;">Centro</th>
                                <th>Fecha</th>
                                <th>Tipo_doc</th>
                                <th>Folio</th>
                                <th>Monto</th>
                                <th>
                                    <input type="checkbox" name="select_all_pre1" value="1" id="example-select-all-p1">
                                </th>

                            </tr>
                        </thead>
                        <tbody>
                             @{
                        int i1 = 0;
                            }
                            @foreach (var item in Model)
                            {
                            <tr>
                                <td style="width:30px;">@item.Centro</td>
                                <td>@item.FechaVenta.ToString("dd-MM-yyyy")</td>
                                <td>@item.TipoDoc</td>
                                <td>@item.Folio</td>
                                <td>@item.Monto.ToString("C")</td>
                                <td>
                                    <input id="ListNCFC[@i1].isCheck" type="checkbox" @(item.isCheck ? "checked" : "") name="ListNCFC[@i1].isCheck" value="true" />
                                    <input type="hidden" name="ListNCFC[@i1].Folio" value="@(item.Folio)">
                                    <input type="hidden" name="ListNCFC[@i1].Centro" value="@(item.Centro)">
                                    <input type="hidden" name="ListNCFC[@i1].FechaVenta" value="@(item.FechaVenta)">
                                    <input type="hidden" name="ListNCFC[@i1].TipoDoc" value="@(item.TipoDoc)">
                                    <input type="hidden" name="ListNCFC[@i1].Monto" value="@(item.Monto)">
                                    <input type="hidden" name="ListNCFC[@i1].Rut" value="@(item.Rut)">
                                </td>
                            </tr>
                                i1 = i1 + 1;
                            }

                        </tbody>

                    </table>
                  
                    <!-- Modal -->

                </div>
            </div>


        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">Cerrar</button>
            <button type="button" class="btn btn-sm btn-danger" id="btcarga">Reprocesar</button>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

        var tableNCFC = $("#TBNCFC").DataTable({
            scrollX: true,
            "language": {
                "url": "//cdn.datatables.net/plug-ins/1.10.16/i18n/Spanish.json"
            }
        });



       
        ////////////////////////////////////////////////////////////////
         //AUTO-AJUSTA LAS TABLAS AL CAMBIAR DE TABS
        $('button[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            $($.fn.dataTable.tables(true)).DataTable()
                .columns.adjust();
                //.fixedColumns().relayout();
        });

         ////////////////////////////////////////////////////////////////
         ////////////////////////////////////////////////////////////////
         /////////                PREMISA 1            //////////////////
        // Handle click on "Select all" control
        $('#example-select-all-p1').on('click', function () {
            // Get all rows with search applied
            var rows = tableNCFC.rows({ 'search': 'applied' }).nodes();
            // Check/uncheck checkboxes for all rows in the table
            $('input[type="checkbox"]', rows).prop('checked', this.checked);
        });
        // Handle click on checkbox to set state of "Select all" control
        $('#TBNCFC tbody').on('change', 'input[type="checkbox"]', function () {
            // If checkbox is not checked
            if (!this.checked) {
                var el = $('#example-select-all').get(0);
                // If "Select all" control is checked and has 'indeterminate' property
                if (el && el.checked && ('indeterminate' in el)) {
                    // Set visual state of "Select all" control
                    // as 'indeterminate'
                    el.indeterminate = true;
                }
            }
        });
        
        ////////////////////////////////////////////////////////////////

        $('#btcarga').click(function (event) {

            var result = confirm("Desea Generar Idoc?.. Este proceso puede durar mas de 5min");
            if (result) {
                $('#cargal').modal('show');
                var ListNCFC = tableNCFC.$('input').serialize();

                var arg = ListNCFC;
                console.log(arg.toString());
                var url = '@Url.Action("FoliosNCFC", "Gestion")';

                $.ajax({
                    type: 'POST',
                    url: url,
                    data: arg,
                    success: function (response) {
                        if (response.error == true) {
                            $('#ReprocesoIdocNCFC').modal('hide');
                            setTimeout(MostrarMensaje, 4000);
                            setTimeout(bajar, 5000);
                            /*   $("#cargarMensajes").modal('show');*/

                        }
                        else {
                            setTimeout(MostrarMensaje, 3000);
                            setTimeout(bajar, 4000);

                        }
                        function MostrarMensaje() {
                            $('#cargal').modal('hide');
                            $('#cargarMensajes').modal('show');
                            $('#mensajeLoad').html(response.respuesta);
                        };


                        function bajar() {

                            $('#cargarMensajes').modal('hide');
                        };


                    },
                    error: function (r, error) {
                        alert('Error FormUsuario.cshtml, function.click #btnCrear');
                    }

                });
            }
        });


    });


    function DownloadIdocNC(data, urlNC) {

        var url = urlNC;
        var list = [];
        var fileName = '';
        list.push({ fileName: fileName });

        $('#cargal').modal('show');
        $.ajax({
            url: url,
            type: "post",
            data: data,
            xhrFields: {
                responseType: 'blob'
            },
            success: function (data, textStatus, xhr) {
                var filename = list[0].filename;
                var disposition = xhr.getResponseHeader('Content-Disposition');
                if (disposition && disposition.indexOf('attachment') !== -1) {
                    var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                    var matches = filenameRegex.exec(disposition);
                    if (matches != null && matches[1]) filename = matches[1].replace(/['"]/g, '');
                    var a = document.createElement('a');
                    var url = window.URL.createObjectURL(data);
                    a.href = url;
                    a.download = filename;
                    document.body.append(a);
                    a.click();
                    a.remove();
                    window.URL.revokeObjectURL(url);
                }
                else {
                    getErrorToastMessage("ERROR AL DESCARGAR ARCHIVO");
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {

            },
            complete: function () {
                setTimeout(function () {
                    $("#cargal").modal('hide');
                }, 1500);

            }
        });
    }
</script>